# Generated by Django 4.1.6 on 2023-04-04 09:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Archive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=100, null=True)),
                ('archive', models.FileField(blank=True, null=True, upload_to='archives/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['zip', 'rar', '7z'])])),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=100, null=True)),
                ('in_print', models.BooleanField(default=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='books/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'epub', 'mobi', 'azw3'])])),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/topics/')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.category')),
            ],
        ),
        migrations.CreateModel(
            name='BookImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/books/')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.book')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.category'),
        ),
        migrations.CreateModel(
            name='ArchiveImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/archives/')),
                ('archive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.archive')),
            ],
        ),
        migrations.AddField(
            model_name='archive',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.category'),
        ),
    ]
